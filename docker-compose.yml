version: '3'
services:

  web-dvwa:
    container_name: web-dvwa
    image: vulnerables/web-dvwa
#    ports:
#      - 8080:80
    networks:
      - elknetwork

  modsecurity:
    container_name: modsecurity
    image: owasp/modsecurity-crs
    ports:
      - 8081:80
    environment:
      - PARANOIA=1
      - PROXY=1
      # - UPSTREAM=web-dvwa:80/
      # - SERVERNAME=web-dvwa:80/
      - PROXYLOCATION=http://web-dvwa:80/
    links:
      - logstash:logstash
      - elasticsearch:elasticsearch
      - kibana:kibana
    depends_on: 
      - logstash
      - elasticsearch
      - kibana
    build: ./modsecurity/
    privileged: true
    networks:
      - elknetwork

  logstash:
    container_name: logstash
    image: logstash:7.7.0
    hostname: logstash
    ports:
      - 9600:9600 # monitoring API
      - 5000:5000 # TCP input 
      - 5044:5044 # Beats input
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    links:
      - elasticsearch:elasticsearch
    depends_on:
      - elasticsearch
    networks:
      - elknetwork

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:7.7.0
    hostname: elasticsearch
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
    ports:
      - 9200:9200 # HTTP
      - 9300:9300 # TCP transport
    networks:
      - elknetwork

  kibana:
    container_name: kibana
    image: kibana:7.7.0
    hostname: kibana
    ports:
      - 5601:5601 # Kibana GUI
    volumes:
      - ./modsecurity/kibana.yml:/usr/share/kibana/config/kibana.yml
    links:
      - elasticsearch:elasticsearch
    depends_on:
      - elasticsearch
    networks:
      - elknetwork

  # portainer:
  #   container_name: portainer
  #   image: portainer/portainer
  #   command: -H unix:///var/run/docker.sock
  #   restart: always
  #   ports:
  #     - 9000:9000
  #     - 8000:8000
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - portainer_data:/data

networks:
  elknetwork:
    driver: bridge

# volumes:
#   portainer_data: {}
